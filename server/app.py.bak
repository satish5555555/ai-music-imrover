import os, mimetypes
from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
from werkzeug.utils import secure_filename
from model_service import improve_music_or_audio
from utils import makedirs

BASE = os.path.dirname(__file__)
UPLOAD_DIR = os.path.join(BASE, "uploads")
OUTPUT_DIR = os.path.join(UPLOAD_DIR, "outputs")
makedirs(UPLOAD_DIR)
makedirs(OUTPUT_DIR)

app = Flask(__name__, static_folder="static", static_url_path="")
CORS(app)
ALLOWED = {".mid", ".midi", ".wav", ".mp3"}

@app.route("/")
def home():
    return app.send_static_file("index.html")

@app.route("/api/upload", methods=["POST"])
def upload():
    if "file" not in request.files:
        return jsonify({"error": "No file"}), 400
    f = request.files["file"]
    ext = os.path.splitext(f.filename)[1].lower()
    if ext not in ALLOWED:
        return jsonify({"error": "Invalid file type"}), 400
    fname = secure_filename(f.filename)
    savepath = os.path.join(UPLOAD_DIR, fname)
    f.save(savepath)
    return jsonify({"filename": fname}), 200

@app.route("/api/improve", methods=["POST"])
def improve():
    data = request.json
    fname = data.get("filename")
    mode = data.get("mode", "auto")
    if not fname:
        return jsonify({"error":"filename required"}),400
    in_path = os.path.join(UPLOAD_DIR, fname)
    out_name = f"improved_{fname}"
    out_path = os.path.join(OUTPUT_DIR, out_name)
    try:
        improve_music_or_audio(in_path, out_path, mode)
        return jsonify({"ok": True, "output": out_name})
    except Exception as e:
        return jsonify({"error": str(e)}), 500

@app.route("/api/download/<name>")
def download(name):
    path = os.path.join(OUTPUT_DIR, name)
    if not os.path.exists(path): return "Not found", 404
    return send_file(path, as_attachment=True)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000, debug=False)
